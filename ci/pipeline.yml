---
jobs:
- name: deploy-docker-swarm-staging
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: docker-swarm-config
      trigger: true
    - get: common-stage
    - get: docker-swarm-stemcell
    - get: cg-s3-docker-swarm-release
    - get: cg-s3-newrelic-release
    - get: cg-s3-collectd-release
  - task: docker-swarm-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: docker-swarm-config
        - name: common-stage
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: docker-swarm-config/bosh/deployment.yml
        MERGE_FILES: docker-swarm-config/bosh/jobs.yml docker-swarm-config/bosh/services.yml docker-swarm-config/bosh/hardening.yml common-stage/secrets.yml
  - put: docker-swarm-staging-deployment
    params:
      cert: common-stage/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases:
        - cg-s3-docker-swarm-release/docker-boshrelease-*.tgz
        - cg-s3-newrelic-release/newrelic-*.tgz
        - cg-s3-collectd-release/collectd-*.tgz
      stemcells:
        - docker-swarm-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy docker-swarm on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed docker-swarm on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: deploy-docker-swarm-prod
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: docker-swarm-config
      trigger: true
    - get: common-prod
    - get: docker-swarm-stemcell
    - get: cg-s3-docker-swarm-release
    - get: cg-s3-newrelic-release
    - get: cg-s3-collectd-release
  - task: docker-swarm-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: docker-swarm-config
        - name: common-prod
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: docker-swarm-config/bosh/deployment.yml
        MERGE_FILES: docker-swarm-config/bosh/jobs.yml docker-swarm-config/bosh/services.yml docker-swarm-config/bosh/hardening.yml common-prod/secrets.yml
  - put: docker-swarm-prod-deployment
    params:
      cert: common-prod/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases:
        - cg-s3-docker-swarm-release/docker-boshrelease-*.tgz
        - cg-s3-newrelic-release/newrelic-*.tgz
        - cg-s3-collectd-release/collectd-*.tgz
      stemcells:
        - docker-swarm-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy docker-swarm on prod
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed docker-swarm on prod
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

resources:
- name: common-stage
  type: cg-common
  source:
    bucket_name: {{docker-swarm-private-bucket-staging}}
    region: {{aws-region}}
    access_key_id: {{docker-swarm-private-access-key-id-staging}}
    secret_access_key: {{docker-swarm-private-secret-access-key-staging}}
    secrets_file: docker-swarm-staging.yml
    secrets_passphrase: {{docker-swarm-staging-private-passphrase}}
    bosh_cert: bosh.pem

- name: common-prod
  type: cg-common
  source:
    bucket_name: {{docker-swarm-private-bucket-production}}
    region: {{aws-region}}
    access_key_id: {{docker-swarm-private-access-key-id-production}}
    secret_access_key: {{docker-swarm-private-secret-access-key-production}}
    secrets_file: docker-swarm.yml
    secrets_passphrase: {{docker-swarm-production-private-passphrase}}
    bosh_cert: bosh.pem

- name: docker-swarm-config
  type: git
  source:
    uri: {{cg-deploy-docker-swarm-git-url}}
    branch: {{cg-deploy-docker-swarm-git-branch}}

- name: docker-swarm-stemcell
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{docker-swarm-stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{s3-bosh-releases-secret-access-key}}

- name: cg-s3-docker-swarm-release
  type: s3
  source:
    region_name: {{aws-region}}
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: docker-boshrelease-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}

- name: cg-s3-newrelic-release
  type: s3
  source:
    region_name: {{aws-region}}
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: newrelic-(\d+).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}

- name: cg-s3-collectd-release
  type: s3
  source:
    region_name: {{aws-region}}
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: collectd-(\d+).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}

- name: docker-swarm-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{docker-swarm-staging-deployment-bosh-target}}
    username: {{docker-swarm-staging-deployment-bosh-username}}
    password: {{docker-swarm-staging-deployment-bosh-password}}
    deployment: {{docker-swarm-staging-deployment-bosh-deployment}}
    ignore_ssl: false

- name: docker-swarm-prod-deployment
  type: 18f-bosh-deployment
  source:
    target: {{docker-swarm-production-deployment-bosh-target}}
    username: {{docker-swarm-production-deployment-bosh-username}}
    password: {{docker-swarm-production-deployment-bosh-password}}
    deployment: {{docker-swarm-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource
- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource
